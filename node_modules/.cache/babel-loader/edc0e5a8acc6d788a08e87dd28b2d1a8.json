{"ast":null,"code":"var _jsxFileName = \"/Users/ramsddc1/Documents/Projects/Circuit/Toni_Example/src/containers/Location.js\";\nimport * as THREE from \"three\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport map from './textures/earth.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Location extends Component {\n  constructor(props) {\n    super(props);\n    this.scene = new THREE.Scene();\n    this.width = window.innerWidth;\n    this.height = window.innerHeight;\n    this.renderer = new THREE.WebGLRenderer();\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.setSize(this.width, this.height);\n    this.renderer.setClearColor(0xeeeeee, 1);\n    this.renderer.outputEncoding = THREE.sRGBEncoding;\n    document.body.appendChild(this.renderer.domElement);\n    this.camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.001, 1000);\n    this.camera.position.set(0, 0, 5);\n    this.time = 0;\n    this.isPlaying = true; //rotate scene\n\n    this.mouseDown = false;\n    this.mouseX = 0;\n    this.mouseY = 0; // end rotate the scene\n\n    this.addObjects();\n    this.resize();\n    this.addMouseHandler();\n    this.renderScene();\n    this.setupResize();\n  } //rotate the scene \n\n\n  onMouseMove(e) {\n    if (!this.mouseDown) {\n      return;\n    }\n\n    e.preventDefault();\n    this.deltaX = e.clientX - this.mouseX;\n    this.deltaY = e.clientY - this.mouseY;\n    this.mouseX = e.clientX;\n    this.mouseY = e.clientY;\n    this.rotateScene(this.deltaX, this.deltaY);\n  }\n\n  onMouseDown(e) {\n    e.preventDefault();\n    this.mouseDown = true;\n    this.mouseX = e.clientX;\n    this.mouseY = e.clientY;\n  }\n\n  onMouseUp(e) {\n    e.preventDefault();\n    this.mouseDown = false;\n  }\n\n  addMouseHandler() {\n    window.addEventListener('mousemove', e => {\n      this.onMouseMove(e);\n    }, false);\n    window.addEventListener('mousedown', e => {\n      this.onMouseDown(e);\n    }, false);\n    window.addEventListener('mouseup', e => {\n      this.onMouseUp(e);\n    }, false);\n  }\n\n  rotateScene(deltaX, deltaY) {\n    this.mesh.rotation.y += deltaX / 100;\n    this.mesh.rotation.x += deltaY / 100;\n  } //end rotate the scene\n\n\n  settings() {\n    let that = this;\n    this.settings = {\n      progress: 0\n    };\n  }\n\n  setupResize() {\n    window.addEventListener(\"resize\", this.resize.bind(this));\n  }\n\n  resize() {\n    this.width = window.innerWidth;\n    this.height = window.innerHeight;\n    this.renderer.setSize(this.width, this.height);\n    this.camera.aspect = this.width / this.height;\n    this.camera.updateProjectionMatrix();\n  }\n\n  addObjects() {\n    let that = this;\n    this.material = new THREE.MeshPhongMaterial(); //this.material.color = new THREE.Color(\"rgb(200, 0,0)\");\n\n    this.material.map = new THREE.TextureLoader().load(map);\n    this.geometry = new THREE.SphereGeometry(2, 45, 45);\n    this.mesh = new THREE.Mesh(this.geometry, this.material);\n    this.light = new THREE.AmbientLight(0xffffed);\n    this.scene.add(this.mesh);\n    this.scene.add(this.light);\n  }\n\n  stop() {\n    this.isPlaying = false;\n  }\n\n  play() {\n    if (!this.isPlaying) {\n      this.renderScene();\n      this.isPlaying = true;\n    }\n  }\n\n  renderScene() {\n    if (!this.isPlaying) return;\n    requestAnimationFrame(this.renderScene.bind(this));\n    this.renderer.render(this.scene, this.camera);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"script\", {\n        src: \"Location.js\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/ramsddc1/Documents/Projects/Circuit/Toni_Example/src/containers/Location.js"],"names":["THREE","React","Component","ReactDOM","map","Location","constructor","props","scene","Scene","width","window","innerWidth","height","innerHeight","renderer","WebGLRenderer","setPixelRatio","devicePixelRatio","setSize","setClearColor","outputEncoding","sRGBEncoding","document","body","appendChild","domElement","camera","PerspectiveCamera","position","set","time","isPlaying","mouseDown","mouseX","mouseY","addObjects","resize","addMouseHandler","renderScene","setupResize","onMouseMove","e","preventDefault","deltaX","clientX","deltaY","clientY","rotateScene","onMouseDown","onMouseUp","addEventListener","mesh","rotation","y","x","settings","that","progress","bind","aspect","updateProjectionMatrix","material","MeshPhongMaterial","TextureLoader","load","geometry","SphereGeometry","Mesh","light","AmbientLight","add","stop","play","requestAnimationFrame","render"],"mappings":"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","sourcesContent":["import * as THREE from \"three\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport map from './textures/earth.jpg';\n\nexport default class Location extends Component {\n  constructor(props) {\n    super(props);\n    this.scene = new THREE.Scene();\n\n    this.width = window.innerWidth;\n    this.height = window.innerHeight;\n    this.renderer = new THREE.WebGLRenderer();\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.setSize(this.width, this.height);\n    this.renderer.setClearColor(0xeeeeee, 1);\n    this.renderer.outputEncoding = THREE.sRGBEncoding;\n\n    document.body.appendChild(this.renderer.domElement);\n\n    this.camera = new THREE.PerspectiveCamera(\n      75,\n      window.innerWidth / window.innerHeight,\n      0.001,\n      1000\n    );\n\n    this.camera.position.set(0, 0, 5);\n    this.time = 0;\n\n    this.isPlaying = true;\n\n    //rotate scene\n    this.mouseDown = false;\n    this.mouseX = 0;\n    this.mouseY = 0;\n    // end rotate the scene\n\n    this.addObjects();\n    this.resize();\n    this.addMouseHandler();\n    this.renderScene();\n    this.setupResize();\n  }\n\n  //rotate the scene \n\n\n  onMouseMove(e) {\n    if (!this.mouseDown) {\n      return;\n    }\n\n    e.preventDefault();\n\n    this.deltaX = e.clientX - this.mouseX;\n    this.deltaY = e.clientY - this.mouseY;\n    this.mouseX = e.clientX;\n    this.mouseY = e.clientY;\n    this.rotateScene(this.deltaX, this.deltaY);\n  }\n\n  onMouseDown(e) {\n    e.preventDefault();\n\n    this.mouseDown = true;\n    this.mouseX = e.clientX;\n    this.mouseY = e.clientY;\n  }\n\n  onMouseUp(e) {\n    e.preventDefault();\n\n    this.mouseDown = false;\n  }\n\n  addMouseHandler() {\n    window.addEventListener('mousemove', (e) => {\n      this.onMouseMove(e);\n    }, false);\n    window.addEventListener('mousedown', (e) => {\n      this.onMouseDown(e);\n    }, false);\n    window.addEventListener('mouseup', (e) => {\n      this.onMouseUp(e);\n    }, false);\n  }\n\n\n  rotateScene(deltaX, deltaY) {\n    this.mesh.rotation.y += deltaX / 100;\n    this.mesh.rotation.x += deltaY / 100;\n  }\n\n\n\n  //end rotate the scene\n\n  settings() {\n    let that = this;\n    this.settings = {\n      progress: 0,\n    };\n  }\n\n  setupResize() {\n    window.addEventListener(\"resize\", this.resize.bind(this));\n  }\n\n  resize() {\n    this.width = window.innerWidth;\n    this.height = window.innerHeight;\n    this.renderer.setSize(this.width, this.height);\n    this.camera.aspect = this.width / this.height;\n    this.camera.updateProjectionMatrix();\n  }\n\n  addObjects() {\n    let that = this;\n    this.material = new THREE.MeshPhongMaterial();\n    //this.material.color = new THREE.Color(\"rgb(200, 0,0)\");\n    this.material.map = new THREE.TextureLoader().load(map);\n    this.geometry = new THREE.SphereGeometry(2, 45, 45);\n    this.mesh = new THREE.Mesh(this.geometry, this.material);\n    this.light = new THREE.AmbientLight(0xffffed);\n    this.scene.add(this.mesh);\n    this.scene.add(this.light);\n  }\n\n  stop() {\n    this.isPlaying = false;\n  }\n\n  play() {\n    if (!this.isPlaying) {\n      this.renderScene()\n      this.isPlaying = true;\n    }\n  }\n\n  renderScene() {\n    if (!this.isPlaying) return;\n    requestAnimationFrame(this.renderScene.bind(this));\n    this.renderer.render(this.scene, this.camera);\n  }\n\n  render() {\n\n    return (\n      <div>\n        <script src=\"Location.js\"></script>\n      </div>\n    );\n\n  }\n\n}\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}